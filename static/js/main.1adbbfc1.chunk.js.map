{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","findContact","ContactForm","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","alert","className","style","form","this","input","autoComplete","type","onChange","btn","Component","connect","dispatch","contacts","getVisibleContacts","filter","toLowerCase","includes","items","onDeleteContact","list","map","item","onClick","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1adbbfc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst findContact = createAction('contacts/find');\n\nexport default { addContact, deleteContact, findContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contacts from '../../redux/contacts-actions';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.name !== '' && this.state.number !== '') {\n      this.props.onSubmit({\n        name: this.state.name,\n        number: this.state.number,\n      });\n\n      this.setState({ name: '', number: '' });\n      return;\n    }\n\n    alert('Please, complete all required fields!');\n  };\n\n  render() {\n    return (\n      <form className={style.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={style.input}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={style.input}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={style.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contacts.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contacts from '../../redux/contacts-actions';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={style.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={style.item} key={id}>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={style.btn}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getVisibleContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contacts.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contacts from '../../redux/contacts-actions';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={style.filter}>\n    <label>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contacts.findContact(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.findContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}